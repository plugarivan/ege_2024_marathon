'''На автозаправке работают две заправочные колонки. Заправиться дизельным топливом можно только в колонке 1, бензином А-76 – только в колонке 2. Клиент заезжает на заправку и встаёт в очередь к той колонке, в которой есть необходимое ему топливо. Если нужное топливо есть в обеих колонках, клиент выбирает ту, очередь к которой в данный момент меньше. Если обе очереди одинаковые, клиент выбирает колонку с меньшим номером. Если при этом в очереди к выбранной колонке уже стоит 5 или более машин (считая ту машину, которая сейчас заправляется), клиент сразу уезжает.
Входные данные представлены в файле 26-143.txt следующим образом. В первой строке входного файла содержит натуральное число N (1 ≤ N ≤ 1000) – количество клиентов, которые заезжали на заправку в течение дня. Каждая из следующих N строк описывает одного клиента и содержит 3 целых числа: время приезда клиента на заправку (количество минут с начала рабочего дня); время, необходимое для заправки, и номер колонки, в которой ему необходимо заправляться (0 означает, что клиент может заправляться на любой колонке). Гарантируется, что никакие два клиента не приезжают одновременно. Следующая машина может заправляться сразу же, как закончилась заправка предыдущей.
Запишите в ответе два числа: количество машин, которые будут заправлены в течение дня на колонке 1, и количество клиентов, которые уехали с заправки из-за очередей.
Пример входного файла:
5
10 5 0
11 3 1
12 4 0
13 4 1
14 5 0
Предположим, что клиент уезжает, если очередь к нужной ему колонке включает более одной машины. При таких исходных данных на первой колонке заправятся первая и вторая машины, а четвёртый клиент уедет, поскольку ему нужна первая колонка, где в очереди в момент 13 находятся две машины. Ответ: 2 1.
'''
with open('26-143.txt') as f:
    n = int(f.readline())
    data = [list(map(int, i.split())) for i in f]
    data.sort()
    window1, window2 = [], []
    count = neok = 0
    for prixod, dlitel, N_okna in data:
        while len(window1) > 0 and window1[0] <= prixod:
            del window1[0]
        while len(window2) > 0 and window2[0] <= prixod:
            del window2[0]
        if N_okna == 1 or (N_okna == 0 and len(window1) <= len(window2)):
            if not window1:
                window1.append(prixod + dlitel)
                count += 1
            elif len(window1) < 5:
                window1.append(window1[-1] + dlitel)
                count += 1
            else:
                neok += 1
        else:
            if not window2:
                window2.append(prixod + dlitel)
            elif len(window2) < 5:
                window2.append(window2[-1] + dlitel)
            else:
                neok += 1
    print(count, neok)
