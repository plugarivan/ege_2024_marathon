'''В отделении банка работают два окна для обслуживания клиентов. Некоторые услуги могут быть оказаны только при обращении в определённое окно, некоторые – при обращении в любое окно. Клиент входит в отделение и встаёт в очередь к тому окну, которое оказывает необходимую ему услугу. Если услуга может быть оказана в любом окне, клиент выбирает то, в очереди к которому в данный момент меньше людей. Если очереди в оба окна одинаковые, клиент выбирает окно с меньшим номером. При этом если в очереди к выбранному окну уже стоит 14 или более человек (включая человека, которого обслуживают в данный момент), пришедший клиент сразу уходит. Если момент завершения обслуживания одного или нескольких клиентов совпадает с моментом прихода нового клиента, то можно считать, что новый клиент пришёл после того, как обслуживание ранее пришедшего клиента завершилось и очередь сократилась.
Входные данные
Первая строка входного файла содержит целое число N (N ≤ 1000) – общее количество клиентов, пришедших в отделение за один рабочий день. Каждая из следующих N строк описывает одного клиента и содержит 3 целых числа: время прихода клиента в отделение (количество минут с начала рабочего дня), время, необходимое для обслуживания данного клиента, и номер окна, в которое ему необходимо обратиться (0 означает, что клиент может обратиться в любое окно). Гарантируется, что никакие два клиента не приходят одновременно.
Определите, сколько клиентов будет обслужено в течение дня в окне номер 2 и сколько клиентов покинет отделение из-за слишком больших очередей.
В ответе запишите два целых числа: сначала количество клиентов, обслуженных в окне номер 2, затем количество необслуженных клиентов.
Файлы к заданию:26-g5.txt
'''
with open('26-g5.txt') as f:
    n = int(f.readline())
    data = [list(map(int, i.split())) for i in f]
    data.sort()
    window1, window2 = [], []
    count = neok = 0
    for prixod, dlitel, N_okna in data:
        while len(window1) > 0 and window1[0] <= prixod:
            del window1[0]
        while len(window2) > 0 and window2[0] <= prixod:
            del window2[0]
        if N_okna == 1 or (N_okna == 0 and len(window1) <= len(window2)):
            if not window1:
                window1.append(prixod + dlitel)
            elif len(window1) < 14:
                window1.append(window1[-1] + dlitel)
            else:
                neok += 1
        else:
            if not window2:
                window2.append(prixod + dlitel)
                count += 1
            elif len(window2) < 14:
                window2.append(window2[-1] + dlitel)
                count += 1
            else:
                neok += 1
    print(count, neok)
